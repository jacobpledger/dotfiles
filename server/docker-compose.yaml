---
version: '2'
services:
  nginx:
    image: nginx
    hostname: nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - proxy
    volumes:
      - "./nginx/conf.d:/etc/nginx/conf.d"
      - "./nginx/vhost.d:/etc/nginx/vhost.d"
      - "./nginx/share:/usr/share/nginx/html"
      - "./certs:/etc/nginx/certs:ro"
    environment:
      - DEFAULT_HOST=jacobpledger.com
  nginx-gen:
    image: jwilder/docker-gen
    hostname: nginx-gen
    container_name: nginx-gen
    volumes:
      - "./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
    volumes_from:
      - "nginx"
    networks:
      - proxy
    # entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -only-exposed -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    # only-exposed seems to cause an issue with nginx-gen not being able to see available servers
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
  letsencrypt-nginx-proxy-companion:
    hostname: letsencrypt
    container_name: letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./certs:/etc/nginx/certs:rw"
      - "./nginx/vhost.d:/etc/nginx/vhost.d"
      - "./nginx/share:/usr/share/nginx/html"
    volumes_from:
      - "nginx-gen"
    networks:
      - proxy
    environment:
      - NGINX_PROXY_CONTAINER=nginx
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
  db:
    image: mariadb
    hostname: db
    container_name: db
    restart: always
    env_file: .env
    volumes:
      - mariadb:/var/lib/mysql
    networks:
      - proxy
    environment:
      - MYSQL_DATABASE=maria
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=jacob
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
  ghost:
    image: ghost:alpine
    hostname: ghost
    container_name: ghost
    restart: always
    depends_on:
      - nginx
      - db
    expose:
      - "2368"
    networks:
      - proxy
    environment:
      - database__client=sqlite3
      - database__connection__host=db
      - database__connection__user=jacob
      - database__connection__password=${MYSQL_PASSWORD}
      - database__connection__database=maria
      - VIRTUAL_HOST=jacobpledger.com,www.jacobpledger.com
      - LETSENCRYPT_HOST=jacobpledger.com,www.jacobpledger.com
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      # - LETSENCRYPT_TEST=true
  calibre:
    image: regueiro/calibre-server
    hostname: calibre
    container_name: calibre
    restart: always
    volumes:
      - ./calibrelibrary:/opt/calibre/library
    ports:
      - "8080"
    networks:
      - proxy
    environment:
      - VIRTUAL_HOST=books.jacobpledger.com
      - VIRTUAL_PORT=8080
      - LETSENCRYPT_HOST=books.jacobpledger.com
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      # - LETSENCRYPT_TEST=true
    entrypoint: 
      - "/usr/bin/calibre-server"
      - "/opt/calibre/library"
      - --username
      - jacob
      - --password
      - ${CALIBRE_PASSWORD}
  nextcloud:
    image: nextcloud
    hostname: nextcloud
    container_name: nextcloud
    restart: always
    env_file: .env
    # ports:
    #   - "443"
    networks:
      - proxy
      - default
    depends_on:
      - nginx
      - db
    environment:
      - MYSQL_HOST=db
      - MYSQL_DATABASE=maria
      - NEXTCLOUD_ADMIN_USER=admin
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - MYSQL_USER=jacob
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - VIRTUAL_HOST=nextcloud.jacobpledger.com
      - LETSENCRYPT_HOST=nextcloud.jacobpledger.com
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      # - LETSENCRYPT_TEST=true
    volumes:
      - data:/var/www/html/data
      # - config:/var/www/html/config
      - ./nextcloud/config/:/var/www/html/config/
      - apps:/var/www/html/apps
volumes:
  data:
  apps:
  mariadb:
  calibre:
networks:
  proxy:
    driver: bridge
